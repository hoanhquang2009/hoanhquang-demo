{"version":3,"sources":["components/taskform.js","components/sort.js","components/search.js","components/control.js","components/taskitem.js","components/tasklist.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","oncloseform","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onclear","status","id","this","task","satus","nextProps","className","class","onClick","type","required","Component","Sort","sortby","sortvalue","onSort","console","log","icon","role","Search","onSearch","keyword","placeholder","Control","Taskitem","onupdatestatus","delete","update","index","Tasklist","onFilter","filterName","filterstatus","tasks","Elementtask","map","App","onGenerateData","GenerateID","localStorage","setItem","JSON","stringify","onToggeform","isDisplayform","taskeditting","onshowform","data","push","findIndex","result","forEach","splice","parseInt","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","sort","a","b","elmTaskform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80c70eb8.chunk.js","sourcesContent":["\r\nimport { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n          id:'',\r\n          name:'',\r\n          status:true\r\n    }\r\n  }\r\n  componentWillMount(){\r\n      if(this.props.task){\r\n        this.setState({\r\n            id:this.props.task.id,\r\n            name:this.props.task.name,\r\n            satus:this.props.task.status\r\n        })\r\n      }\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps && nextProps.task){\r\n      this.setState({\r\n          id:nextProps.task.id,\r\n          name:nextProps.task.name,\r\n          status:nextProps.task.status\r\n      })\r\n    }else if(!nextProps.task){\r\n        this.setState({\r\n          id:'',\r\n          name:'',\r\n          status:true\r\n        });\r\n    }\r\n  }\r\n  oncloseform=()=>{\r\n      this.props.oncloseform();\r\n  }\r\n  onChange=(event)=>{\r\n     var  target= event.target;\r\n     var name= target.name;\r\n     var value=target.value;\r\n     if(name==='status'){\r\n       value=target.value==='true'?true:false;\r\n     }\r\n     this.setState({\r\n          [name]:value\r\n     });\r\n     \r\n  }\r\n  onSubmit=(event)=>{\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.onclear();\r\n    this.oncloseform();\r\n  }\r\n  onclear=()=>{\r\n        this.setState({\r\n          name:'',\r\n          status:false\r\n        })\r\n  }\r\n  render() {\r\n    var {id}=this.state;\r\n    return (\r\n        <div className=\"panel panel-warning\">\r\n        <div className=\"panel-heading\">\r\n          <h3 className=\"panel-title\">{id !=='' ? 'Cập nhật công Việc': 'Thêm Công Việc' }<i class='bx bx-x r-0' onClick={this.oncloseform}></i></h3>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label >Tên :</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name} onChange={this.onChange}/>\r\n              <label >Trạng Thái :</label>\r\n              <select name=\"status\" id=\"input\" className=\"form-control\" required=\"required\" value={this.state.satus} onChange={this.onChange}>\r\n                <option value={true}> Kích Hoạt</option>\r\n                <option value={false}> Ẩn</option>\r\n              </select>\r\n\r\n            </div>\r\n            <div className=\"text-center\">\r\n\r\n              <button type=\"submit\" className=\"btn btn-warning\"><i className='bx bx-plus-medical' ></i>Lưu Lại</button>\r\n\r\n              <button type=\"button\" className=\"btn btn-danger\"  onClick={this.onclear}><i className='bx bx-x'></i>Hủy Bỏ</button>\r\n\r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskForm;\r\n","\r\nimport { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n    componentWillReceiveProps(nextProps){\r\n        console.log(nextProps);\r\n    }\r\n    onClick=(sortby,sortvalue)=>{\r\n        this.props.onSort(sortby,sortvalue);\r\n    }\r\n  render() {\r\n      var icon=<box-icon type='solid' name='down-arrow'></box-icon>;\r\n    return (\r\n        <div className=\"dropdown\">\r\n        <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick={()=>this.onClick('name',1)}>\r\n                            <a role=\"button\" className={this.props.sortby==='name'&& this.props.sortvalue===1?icon:''}>\r\n                                        <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                            Tên A-Z\r\n                                        </span>\r\n                                    </a>\r\n                        </li>\r\n                        <li onClick={()=>this.onClick('name',-1)}>\r\n                            <a role=\"button\" \r\n                            className={this.props.sortby==='name'&& this.props.sortvalue===-1?'sort_selecter':''}>\r\n                                        <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                            Tên Z-A\r\n                                        </span>\r\n                                    </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\"></li>\r\n                        <li onClick={()=>this.onClick('status',1)}><a\r\n                        className={this.props.sortby==='status'&& this.props.sortvalue===1?'sort_selecter':''}\r\n                        role=\"button\">Trạng Thái Kích Hoạt</a></li>\r\n                        <li onClick={()=>this.onClick('status',-1)}><a\r\n                        className={this.props.sortby==='status'&& this.props.sortvalue===-1?'sort_selecter':''}\r\n                         role=\"button\">Trạng Thái Ẩn</a></li>\r\n                    </ul>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","\r\nimport { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      keyword:''\r\n    }\r\n  }\r\n  onChange=(event)=>{\r\n      var target=event.target;\r\n      var name=target.name;\r\n      var value= target.value;\r\n      this.setState({\r\n          [name]:value\r\n      });\r\n      \r\n      \r\n  }\r\n  onSearch=()=>{\r\n      this.props.onSearch(this.state.keyword);\r\n  }\r\n  render() {\r\n    var {keyword}=this.state;\r\n    return (\r\n        <div className=\"input-group\">\r\n        <input type=\"text\" name=\"keyword\" className=\"form-control\" id=\"exampleInputAmount\" placeholder=\"Tìm Kiếm ....\"\r\n          value={keyword} onChange={this.onChange} />\r\n        <span className=\"input-group-btn\">\r\n\r\n          <button type=\"button\" className=\"btn btn-info\" onClick={this.onSearch}><i className='bx bx-search' ></i>Tìm</button>\r\n\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","\r\nimport { Component } from 'react';\r\nimport Sort from './sort';\r\nimport Search from './search';\r\n\r\nclass Control extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"row mt-15\">\r\n              <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <Search onSearch={this.props.onSearch}/>\r\n              </div>\r\n              <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                    <Sort onSort={this.props.onSort} sortby={this.props.sortby} sortvalue={this.props.sortvalue}/>\r\n              </div>\r\n            </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Control;\r\n","\r\nimport { Component } from 'react';\r\nimport Tasklist from './tasklist';\r\nclass Taskitem extends Component {\r\n    onupdatestatus=()=>{\r\n        this.props.onupdatestatus(this.props.task.id)\r\n    }\r\n    delete=()=>{\r\n        this.props.delete(this.props.task.id);\r\n    }\r\n    update=()=>{\r\n        this.props.update(this.props.task.id);\r\n    }\r\n  render() {\r\n    var {task,index}=this.props;\r\n    return ( \r\n        <tr>\r\n        <td>{index+1}</td>\r\n        <td>{task.name}</td>\r\n        <td className=\"text-center\">\r\n            <span className={task.status===true?'label label-success':'label label-danger'} onClick={this.onupdatestatus}>\r\n                        {task.status===true?'kích hoạt':'Ẩn'}\r\n                    </span>\r\n        </td>\r\n        <td className=\"text-center\">\r\n            <button type=\"button\" className=\"btn btn-warning\" onClick={this.update}>\r\n                <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n            </button>\r\n            &nbsp;\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.delete}>\r\n                <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n            </button>\r\n        </td>\r\n    </tr>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Taskitem;\r\n","\r\nimport { Component } from 'react';\r\nimport Taskitem from './taskitem';\r\nclass Tasklist extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            filterName:'',\r\n            filterstatus:-1// all:-1, active:1 , unactive:0\r\n        }\r\n    }\r\n    onChange=(event)=>{\r\n        var target=event.target;\r\n        var name=target.name;\r\n        var value=target.value;\r\n        this.props.onFilter(\r\n            name==='filterName'?value:this.state.filterName,\r\n            name==='filterstatus'?value:this.state.filterstatus\r\n\r\n        )\r\n        this.setState({\r\n            [name]:value\r\n        });\r\n\r\n    }\r\n  render() {\r\n      var {tasks}=this.props;\r\n      var{filterName,filterstatus}=this.state;\r\n      var Elementtask=tasks.map((task,index)=>{\r\n          return <Taskitem key={task.id} index={index} task={task} onupdatestatus={this.props.onupdatestatus}\r\n                    delete={this.props.delete} update={this.props.update}\r\n          />\r\n      });\r\n    return (\r\n        <table className=\"table table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\">STT</th>\r\n                                    <th className=\"text-center\">Tên</th>\r\n                                    <th className=\"text-center\">Trạng Thái</th>\r\n                                    <th className=\"text-center\">Hành Động</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td></td>\r\n                                    <td>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"filterName\" value={filterName} onChange={this.onChange} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <select className=\"form-control\" name=\"filterstatus\" value={filterstatus} onChange={this.onChange}>\r\n                                            <option value=\"-1\">Tất Cả</option>\r\n                                            <option value=\"0\">Ẩn</option>\r\n                                            <option value=\"1\">Kích Hoạt</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                {Elementtask}\r\n                            </tbody>\r\n                        </table>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tasklist;\r\n","\nimport './App.css';\nimport { Component } from 'react';\nimport TaskForm from './components/taskform';\nimport Control from './components/control';\nimport Tasklist from './components/tasklist';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayform: false,\n      taskeditting: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sortby: 'name',\n      sortvalue: 1\n    }\n  }\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('task')) {\n      var tasks = JSON.parse(localStorage.getItem('task'));\n      this.setState({\n        tasks: tasks\n      })\n    }\n  }\n  onGenerateData = () => {\n    var tasks = [\n      {\n        id: this.GenerateID(),\n        name: ' Học Lập Trình',\n        status: true\n      },\n      {\n        id: this.GenerateID(),\n        name: ' PHP',\n        status: true\n      },\n      {\n        id: this.GenerateID(),\n        name: ' JavaScript',\n        status: false\n      },\n      {\n        id: this.GenerateID(),\n        name: ' ES6',\n        status: false\n      }\n    ];\n    this.setState(\n      {\n        tasks: tasks\n      }\n    );\n    // lưu trữ trong localStorage của trình duyệt\n    localStorage.setItem('task', JSON.stringify(tasks));\n\n  }\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n  GenerateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n  onToggeform = () => {\n    if (this.state.isDisplayform && this.state.taskeditting !== null) {\n      this.setState({\n        isDisplayform: true,\n        taskeditting: null\n      });\n    }\n    else {\n      this.setState({\n        isDisplayform: !this.state.isDisplayform,\n        taskeditting: null\n      });\n    }\n  }\n  oncloseform = () => {\n    this.setState({\n      isDisplayform: false\n    })\n  }\n  onshowform = () => {\n    this.setState({\n      isDisplayform: true\n    })\n  }\n  onSubmit = (data) => {\n    var { tasks } = this.state;\n    if (data.id === '') {\n      data.id = this.GenerateID();\n      tasks.push(data);\n    } else {\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks: tasks,\n      taskeditting: null\n    });\n    localStorage.setItem('task', JSON.stringify(tasks));\n\n  }\n  onupdatestatus = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('task', JSON.stringify(tasks));\n    };\n  }\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    }\n    );\n    return result;\n  }\n  delete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('task', JSON.stringify(tasks));\n    };\n    this.oncloseform();\n  }\n  update = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    var taskeditting = tasks[index];\n    this.setState({\n      taskeditting: taskeditting\n    });\n    this.onshowform();\n\n  }\n  onFilter = (filterName, filterstatus) => {\n    filterstatus = parseInt(filterstatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterstatus\n      }\n    })\n  }\n  onSearch = (keyword) => {\n    this.setState({\n      keyword: keyword.toLowerCase()\n    })\n  }\n  onSort = (sortby, sortvalue) => {\n    this.setState({\n      sortby: sortby,\n      sortvalue: sortvalue\n    });\n\n  }\n  render() {\n    var { tasks, isDisplayform, taskeditting, filter, keyword, sortby, sortvalue } = this.state; // var tasks=this.state.tasks;\n    // fillter hiển thị danh sách\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n      tasks = tasks.filter((tasks) => {\n        if (filter.status === -1) {\n          return tasks;\n        } else {\n          return tasks.status === (filter.status === 1 ? true : false)\n        }\n      })\n    }\n    // keyword của search\n    if (keyword) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n    // sắp xếp danh sách theo tên và trạng thái\n    if(sortby==='name'){\n      tasks.sort((a,b)=>{\n          if(a.name>b.name) return sortvalue;\n          else if(a.name<b.name) return -sortvalue;\n          else return 0;\n      });\n    }else{\n      tasks.sort((a,b)=>{\n        if(a.status>b.status) return -sortvalue;\n        else if(a.status<b.status) return sortvalue;\n        else return 0;\n    });\n    }\n    //tạo ra task form\n    var elmTaskform = isDisplayform ? <TaskForm oncloseform={this.oncloseform} onSubmit={this.onSubmit} task={taskeditting} /> : '';\n    return (\n\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1> QUẢN LÝ CÔNG VIỆC</h1>\n          <hr />\n        </div>\n\n        <div className=\"row\">\n          <div className={isDisplayform ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n            {elmTaskform}\n          </div>\n\n          <div className={isDisplayform ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-info\"\n              onClick={this.onToggeform}\n            ><i class='bx bx-plus-medical' ></i>Thêm Công Việc</button>\n            <button\n              type=\"button\"\n              className=\"btn btn-danger ml-10\"\n              onClick={this.onGenerateData}\n\n            >Tạo Ra Data</button>\n            {/* search va sort */}\n            <Control onSearch={this.onSearch} onSort={this.onSort} sortby={sortby} sortvalue={sortvalue} />\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <Tasklist tasks={tasks} onupdatestatus={this.onupdatestatus} delete={this.delete} update={this.update}\n                  onFilter={this.onFilter} />\n              </div>\n            </div>\n\n\n          </div>\n\n        </div>\n\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}